/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright (c) 2008, 2016 Oracle and/or its affiliates. All rights reserved.
 *
 * Oracle and Java are registered trademarks of Oracle and/or its affiliates.
 * Other names may be trademarks of their respective owners.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 *
 * Contributor(s):
 */
/*
 * ServiceConfiguretionPanel.java
 *
 * Created on January 22, 2008, 3:10 PM
 */

package org.netbeans.modules.websvc.axis2.actions;

import java.awt.event.ItemEvent;
import org.netbeans.modules.websvc.axis2.AxisUtils;
import org.netbeans.modules.websvc.axis2.config.model.GenerateWsdl;
import org.netbeans.modules.websvc.axis2.config.model.Service;



/**
 *
 * 
 */
public class ServiceConfigurationPanel extends javax.swing.JPanel implements java.awt.event.ItemListener {

    private String defaultNs, defaultSchemaNs;

    /** Creates new form ServiceConfiguretionPanel */
    public ServiceConfigurationPanel(Service service) {
        initComponents();
        jTextField1.setText(service.getNameAttr());
        String serviceClass = service.getServiceClass();
        jTextField2.setText(serviceClass);
        defaultNs = AxisUtils.getNamespaceFromClassName(serviceClass);
        jTextField3.setText(defaultNs);
        defaultSchemaNs = defaultNs+"xsd"; //NOI18N
        jTextField4.setText(defaultSchemaNs);
        if (service.getGenerateWsdl() != null) {
            cbDefault1.setEnabled(true);
            cbDefault2.setEnabled(true);
            GenerateWsdl genWsdl = service.getGenerateWsdl();
            cbGenerateWsdl.setSelected(true);
            String ns = genWsdl.getTargetNamespaceAttr();
            if (!defaultNs.equals(ns)) {
                cbDefault1.setSelected(false);
                jTextField3.setEditable(true);
                if (ns != null) jTextField3.setText(ns);
            }
            jTextField3.setText(ns == null?defaultNs:ns);
            String schemaNs = genWsdl.getSchemaNamespaceAttr();
            if (!defaultSchemaNs.equals(schemaNs)) {
                cbDefault2.setSelected(false);
                jTextField4.setEditable(true);
                if (schemaNs != null) jTextField4.setText(schemaNs);
            }
        }
        cbGenerateWsdl.addItemListener(this);
        cbDefault1.addItemListener(this);
        cbDefault2.addItemListener(this);
        
    }
    
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        wsNameLabel = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        wsClassLabel = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        browseButton = new javax.swing.JButton();
        cbGenerateWsdl = new javax.swing.JCheckBox();
        nsLabel = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        cbDefault1 = new javax.swing.JCheckBox();
        schemaNsLabel = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        cbDefault2 = new javax.swing.JCheckBox();
        generateWsdlDesc = new javax.swing.JLabel();

        wsNameLabel.setLabelFor(jTextField1);
        org.openide.awt.Mnemonics.setLocalizedText(wsNameLabel, org.openide.util.NbBundle.getMessage(ServiceConfigurationPanel.class, "ServiceConfigurationPanel.wsNameLabel.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 224, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 16, Short.MAX_VALUE)
        );

        wsClassLabel.setLabelFor(jTextField2);
        org.openide.awt.Mnemonics.setLocalizedText(wsClassLabel, org.openide.util.NbBundle.getMessage(ServiceConfigurationPanel.class, "ServiceConfigurationPanel.wsClassLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(browseButton, org.openide.util.NbBundle.getMessage(ServiceConfigurationPanel.class, "ServiceConfigurationPanel.browseButton.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(cbGenerateWsdl, org.openide.util.NbBundle.getMessage(ServiceConfigurationPanel.class, "ServiceConfigurationPanel.cbGenerateWsdl.text")); // NOI18N
        cbGenerateWsdl.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                cbGenerateWsdlStateChanged(evt);
            }
        });

        nsLabel.setLabelFor(jTextField3);
        org.openide.awt.Mnemonics.setLocalizedText(nsLabel, org.openide.util.NbBundle.getMessage(ServiceConfigurationPanel.class, "ServiceConfigurationPanel.nsLabel.text")); // NOI18N

        jTextField3.setEditable(false);

        cbDefault1.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(cbDefault1, org.openide.util.NbBundle.getMessage(ServiceConfigurationPanel.class, "ServiceConfigurationPanel.cbDefault1.text")); // NOI18N
        cbDefault1.setEnabled(false);

        schemaNsLabel.setLabelFor(jTextField4);
        org.openide.awt.Mnemonics.setLocalizedText(schemaNsLabel, org.openide.util.NbBundle.getMessage(ServiceConfigurationPanel.class, "ServiceConfigurationPanel.schemaNsLabel.text")); // NOI18N

        jTextField4.setEditable(false);

        cbDefault2.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(cbDefault2, org.openide.util.NbBundle.getMessage(ServiceConfigurationPanel.class, "ServiceConfigurationPanel.cbDefault2.text")); // NOI18N
        cbDefault2.setEnabled(false);

        generateWsdlDesc.setText(org.openide.util.NbBundle.getMessage(ServiceConfigurationPanel.class, "ServiceConfigurationPanel.generateWsdlDesc.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(browseButton, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(wsClassLabel)
                                    .addComponent(wsNameLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE))))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbGenerateWsdl)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(generateWsdlDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(nsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(schemaNsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 381, Short.MAX_VALUE)
                                                .addComponent(cbDefault2))
                                            .addComponent(jTextField4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE)
                                            .addComponent(cbDefault1, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 513, Short.MAX_VALUE))))))
                        .addGap(16, 16, 16))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(wsNameLabel)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wsClassLabel)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(browseButton)
                .addGap(18, 18, 18)
                .addComponent(cbGenerateWsdl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(generateWsdlDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(nsLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(cbDefault1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(schemaNsLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbDefault2)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jTextField1.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(ServiceConfigurationPanel.class, "ServiceConfigurationPanel.jTextField1.AccessibleContext.accessibleDescription")); // NOI18N
        jTextField2.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(ServiceConfigurationPanel.class, "ServiceConfigurationPanel.jTextField2.AccessibleContext.accessibleDescription")); // NOI18N
        browseButton.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(ServiceConfigurationPanel.class, "ServiceConfigurationPanel.browseButton.AccessibleContext.accessibleDescription")); // NOI18N
        cbGenerateWsdl.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(ServiceConfigurationPanel.class, "ServiceConfigurationPanel.cbGenerateWsdl.AccessibleContext.accessibleDescription")); // NOI18N
        jTextField3.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(ServiceConfigurationPanel.class, "ServiceConfigurationPanel.jTextField3.AccessibleContext.accessibleDescription")); // NOI18N
        cbDefault1.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(ServiceConfigurationPanel.class, "ServiceConfigurationPanel.cbDefault1.AccessibleContext.accessibleDescription")); // NOI18N
        jTextField4.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(ServiceConfigurationPanel.class, "ServiceConfigurationPanel.jTextField4.AccessibleContext.accessibleDescription")); // NOI18N
        cbDefault2.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(ServiceConfigurationPanel.class, "ServiceConfigurationPanel.cbDefault2.AccessibleContext.accessibleDescription")); // NOI18N

        getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(ServiceConfigurationPanel.class, "ServiceConfigurationPanel.AccessibleContext.accessibleDescription")); // NOI18N
    }// </editor-fold>//GEN-END:initComponents

    private void cbGenerateWsdlStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_cbGenerateWsdlStateChanged
        // TODO add your handling code here:
        if (cbGenerateWsdl.isSelected()) {
            
        }
    }//GEN-LAST:event_cbGenerateWsdlStateChanged

    public void itemStateChanged(ItemEvent e) {
        Object o = e.getSource();
        if (o == cbGenerateWsdl) {
            if (cbGenerateWsdl.isSelected()) {
                cbDefault1.setEnabled(true);
                cbDefault2.setEnabled(true);
                if (!cbDefault1.isSelected()) jTextField3.setEditable(true);
                if (!cbDefault2.isSelected()) jTextField4.setEditable(true);
            } else {
                cbDefault1.setEnabled(false);
                cbDefault2.setEnabled(false);
                jTextField3.setEditable(false);
                jTextField4.setEditable(false);            
            }
        } else if (o == cbDefault1) {
            if (cbDefault1.isSelected()) {
                jTextField3.setEditable(false);
            } else {
                jTextField3.setEditable(true);
            }
        } else if (o == cbDefault2) {
            if (cbDefault2.isSelected()) {
                jTextField4.setEditable(false);
            } else {
                jTextField4.setEditable(true);
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseButton;
    private javax.swing.JCheckBox cbDefault1;
    private javax.swing.JCheckBox cbDefault2;
    private javax.swing.JCheckBox cbGenerateWsdl;
    private javax.swing.JLabel generateWsdlDesc;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JLabel nsLabel;
    private javax.swing.JLabel schemaNsLabel;
    private javax.swing.JLabel wsClassLabel;
    private javax.swing.JLabel wsNameLabel;
    // End of variables declaration//GEN-END:variables
    
    
    public String getTargetNamespace() {
        String ns = jTextField3.getText().trim();
        if (cbDefault1.isSelected() || ns.length() == 0) return defaultNs;
        else return ns;
    }
    
    public String getSchemaNamespace() {
        String ns = jTextField4.getText().trim();
        if (cbDefault2.isSelected() || ns.length() == 0) return defaultSchemaNs;
        else return ns;
    }
    
    public String getServiceName() {
        return jTextField1.getText().trim();
    }
    
    public String getServiceClass() {
        return jTextField2.getText().trim();
    }
    
    public boolean generateWsdl() {
        return cbGenerateWsdl.isSelected();
    }
}
