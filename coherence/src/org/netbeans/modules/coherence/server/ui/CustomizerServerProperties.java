/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 2011 Oracle and/or its affiliates. All rights reserved.
 *
 * Oracle and Java are registered trademarks of Oracle and/or its affiliates.
 * Other names may be trademarks of their respective owners.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 *
 * Contributor(s):
 *
 * Portions Copyrighted 2011 Sun Microsystems, Inc.
 */

/*
 * CustomizerServerProperties.java
 *
 * Created on Aug 16, 2011, 2:14:16 PM
 */
package org.netbeans.modules.coherence.server.ui;

import java.awt.BorderLayout;
import org.netbeans.api.server.properties.InstanceProperties;
import org.netbeans.modules.coherence.server.CoherenceProperties;
import org.netbeans.modules.coherence.server.CoherenceServerProperty;
import org.openide.DialogDescriptor;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor.Confirmation;
import org.openide.explorer.propertysheet.PropertySheet;
import org.openide.explorer.propertysheet.PropertySheetView;
import org.openide.nodes.Node;
import org.openide.util.NbBundle;

/**
 *
 */
public class CustomizerServerProperties extends javax.swing.JPanel {

    private CoherenceProperties coherenceProperties;

    /** Creates new form CustomizerServerProperties */
    public CustomizerServerProperties(CoherenceProperties coherenceProperties) {
        this.coherenceProperties = coherenceProperties;
        initComponents();

        // Initialize and include property sheet
        PropertySheet ps = new PropertySheet();
        ps.setNodes(new Node[]{new ServerPropertiesNode(coherenceProperties)});
        PropertySheetView psv = new PropertySheetView();
        psv.add(ps);
        BorderLayout propertiesPanelLayout = new BorderLayout();
        propertiesPanel.setLayout(propertiesPanelLayout);
        propertiesPanel.add(psv);
    }

    /**
     * Performs reset all Coherence server properties to defaults.
     *
     * @param coherenceProperties properties for reseting
     */
    private void resetProperties() {
        for (CoherenceServerProperty property : CoherenceProperties.SERVER_PROPERTIES) {
            coherenceProperties.resetProperty(property.getPropertyName());
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        propertiesPanel = new javax.swing.JPanel();
        resetPropertiesButton = new javax.swing.JButton();

        setName(org.openide.util.NbBundle.getMessage(CustomizerServerProperties.class, "TITLE_Properties")); // NOI18N

        propertiesPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        propertiesPanel.setName(""); // NOI18N

        javax.swing.GroupLayout propertiesPanelLayout = new javax.swing.GroupLayout(propertiesPanel);
        propertiesPanel.setLayout(propertiesPanelLayout);
        propertiesPanelLayout.setHorizontalGroup(
            propertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 396, Short.MAX_VALUE)
        );
        propertiesPanelLayout.setVerticalGroup(
            propertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 260, Short.MAX_VALUE)
        );

        resetPropertiesButton.setText(org.openide.util.NbBundle.getMessage(CustomizerServerProperties.class, "CustomizerServerProperties.resetPropertiesButton.text")); // NOI18N
        resetPropertiesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetPropertiesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(propertiesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(resetPropertiesButton))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(propertiesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resetPropertiesButton))
        );
    }// </editor-fold>//GEN-END:initComponents

private void resetPropertiesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetPropertiesButtonActionPerformed
    // confirmation for the action
    DialogDescriptor.Confirmation confirmation = new Confirmation(
            NbBundle.getMessage(CustomizerServerProperties.class, "MSG_ResetProperties"), //NOI18N
            NbBundle.getMessage(CustomizerServerProperties.class, "TITLE_ResetProperties"),  //NOI18N
            DialogDescriptor.YES_NO_OPTION);
    if (DialogDisplayer.getDefault().notify(confirmation) == DialogDescriptor.YES_OPTION) {
        resetProperties();
        propertiesPanel.repaint();
    }
}//GEN-LAST:event_resetPropertiesButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel propertiesPanel;
    private javax.swing.JButton resetPropertiesButton;
    // End of variables declaration//GEN-END:variables
}
