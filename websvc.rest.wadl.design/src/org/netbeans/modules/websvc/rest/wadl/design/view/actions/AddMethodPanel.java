/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved.
 *
 * Oracle and Java are registered trademarks of Oracle and/or its affiliates.
 * Other names may be trademarks of their respective owners.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * Contributor(s):
 *
 * The Original Software is NetBeans. The Initial Developer of the Original
 * Software is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun
 * Microsystems, Inc. All Rights Reserved.
 *
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 */

package org.netbeans.modules.websvc.rest.wadl.design.view.actions;

import java.util.ArrayList;
import java.util.List;
import javax.swing.ComboBoxModel;
import javax.swing.event.ListDataListener;
import org.netbeans.modules.websvc.rest.wadl.design.MediaType;
import org.netbeans.modules.websvc.rest.wadl.design.Util;
import org.netbeans.modules.websvc.rest.wadl.model.*;

/**
 *
 * 
 */
public class AddMethodPanel extends javax.swing.JPanel {

    /** Creates new form NewJPanel */
    public AddMethodPanel(ResourceType resource, String resourcePath) {
        initComponents();
        
        //Find unique name
        List<String> existingNames = new ArrayList<String>();
        if(!resource.getMethod().isEmpty()) {
            for(Method m:resource.getMethod()) {
                String id = ((Method)m).getId();
                if(id != null && id.length() > 0)
                    existingNames.add(id);
            }
        }
        tfMethodName.setText(Util.generateUniqueName(resourcePath+"."+"newMethod", existingNames));
        MethodTypesModel methodTypesModel = new MethodTypesModel();
        cbMethodType.setModel(methodTypesModel);
        cbMethodType.setSelectedItem(MethodType.GET.value());
        MimeTypesModel mimeTypesModel = new MimeTypesModel();
        cbMimeType.setModel(mimeTypesModel);
        cbMimeType.setSelectedItem(MediaType.XML.value());
    }
    
    public String getMethodName(){
        return tfMethodName.getText();
    }
    
    public String getMethodType(){
        return (String) cbMethodType.getSelectedItem();
    }
     
    public String getMimeType() {
        return (String) cbMimeType.getSelectedItem();
    }

    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        nameLabel = new javax.swing.JLabel();
        returnLabel = new javax.swing.JLabel();
        tfMethodName = new javax.swing.JTextField();
        cbMimeType = new javax.swing.JComboBox();
        returnLabel1 = new javax.swing.JLabel();
        cbMethodType = new javax.swing.JComboBox();

        nameLabel.setLabelFor(tfMethodName);
        org.openide.awt.Mnemonics.setLocalizedText(nameLabel, org.openide.util.NbBundle.getMessage(AddMethodPanel.class, "LBL_MethodName")); // NOI18N

        returnLabel.setLabelFor(cbMimeType);
        org.openide.awt.Mnemonics.setLocalizedText(returnLabel, org.openide.util.NbBundle.getMessage(AddMethodPanel.class, "LBL_MimeType")); // NOI18N

        returnLabel1.setLabelFor(cbMimeType);
        org.openide.awt.Mnemonics.setLocalizedText(returnLabel1, org.openide.util.NbBundle.getMessage(AddMethodPanel.class, "LBL_MethodType")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameLabel)
                            .addComponent(returnLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tfMethodName, javax.swing.GroupLayout.DEFAULT_SIZE, 433, Short.MAX_VALUE)
                            .addComponent(cbMimeType, 0, 433, Short.MAX_VALUE)
                            .addComponent(cbMethodType, javax.swing.GroupLayout.Alignment.LEADING, 0, 433, Short.MAX_VALUE)))
                    .addComponent(returnLabel))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(tfMethodName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbMethodType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(returnLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(returnLabel)
                    .addComponent(cbMimeType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
/*
private WSDLModel getWsdlModel() {
    return WSDLUtils.getWSDLModel(FileUtil.toFileObject(wsdlFile), true);
}*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cbMethodType;
    private javax.swing.JComboBox cbMimeType;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel returnLabel;
    private javax.swing.JLabel returnLabel1;
    private javax.swing.JTextField tfMethodName;
    // End of variables declaration//GEN-END:variables
  
    
    private class MethodTypesModel implements ComboBoxModel {

        private transient List<String> methodTypes = new ArrayList<String>();
        private Object selectedItem;

        public MethodTypesModel() {
            for(String m:MethodType.values(true)) {
                this.methodTypes.add(m);
            }
        }

        public void setSelectedItem(Object selectedItem) {
            this.selectedItem = selectedItem;
        }

        public Object getSelectedItem() {
            return selectedItem;
        }

        public int getSize() {
            return methodTypes.size();
        }

        public Object getElementAt(int index) {
            return methodTypes.get(index);
        }

        public void addListDataListener(ListDataListener l) {
        }

        public void removeListDataListener(ListDataListener l) {
        }
    }
    
    private class MimeTypesModel implements ComboBoxModel {

        private transient List<String> mimeTypes = new ArrayList<String>();
        private Object selectedItem;

        public MimeTypesModel() {
            for(String m:MediaType.values(false)) {
                this.mimeTypes.add(m);
            }
        }

        public void setSelectedItem(Object selectedItem) {
            this.selectedItem = selectedItem;
        }

        public Object getSelectedItem() {
            return selectedItem;
        }

        public int getSize() {
            return mimeTypes.size();
        }

        public Object getElementAt(int index) {
            return mimeTypes.get(index);
        }

        public void addListDataListener(ListDataListener l) {
        }

        public void removeListDataListener(ListDataListener l) {
        }
    }
}
