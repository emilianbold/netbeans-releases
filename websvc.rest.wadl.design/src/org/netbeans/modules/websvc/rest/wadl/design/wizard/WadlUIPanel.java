/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 1997-2010 Oracle and/or its affiliates. All rights reserved.
 *
 * Oracle and Java are registered trademarks of Oracle and/or its affiliates.
 * Other names may be trademarks of their respective owners.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * Contributor(s):
 *
 * The Original Software is NetBeans. The Initial Developer of the Original
 * Software is Sun Microsystems, Inc. Portions Copyright 1997-2007 Sun
 * Microsystems, Inc. All Rights Reserved.
 *
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 */

package org.netbeans.modules.websvc.rest.wadl.design.wizard;

import org.openide.util.NbBundle;

/** WadlUIPanel.java - bottom panel for WSDL wizard
 *
 * 
 */
public class WadlUIPanel extends javax.swing.JPanel {

    public static final String DEFAULT_SERVICE_URL = "http://api.example.com/services/"; //NOI18N
    
    private WadlPanel wizardPanel;
    private javax.swing.JTextField fileNameTF;
    
    private boolean hasUserModifiedServiceUrl = false;
    
    private ServiceUrlDocListener mListener = new ServiceUrlDocListener();
    
    /** Creates new form WadlUIPanel */
    WadlUIPanel(WadlPanel wizardPanel) {
        initComponents();
        this.wizardPanel=wizardPanel;
        tfServiceUrl.setText(DEFAULT_SERVICE_URL);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lbServiceUrl = new javax.swing.JLabel();
        tfServiceUrl = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();

        setLayout(new java.awt.GridBagLayout());

        lbServiceUrl.setLabelFor(tfServiceUrl);
        org.openide.awt.Mnemonics.setLocalizedText(lbServiceUrl, org.openide.util.NbBundle.getMessage(WadlUIPanel.class, "LBL_serviceUrl")); // NOI18N
        lbServiceUrl.setToolTipText(org.openide.util.NbBundle.getMessage(WadlUIPanel.class, "LBL_serviceUrl")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 2, 0);
        add(lbServiceUrl, gridBagConstraints);
        lbServiceUrl.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(WadlUIPanel.class, "LBL_targetNamespace")); // NOI18N
        lbServiceUrl.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(WadlUIPanel.class, "HINT_targetNamespace")); // NOI18N

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/netbeans/modules/websvc/rest/wadl/design/wizard/Bundle"); // NOI18N
        tfServiceUrl.setToolTipText(bundle.getString("HINT_serviceUrl")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 2, 0);
        add(tfServiceUrl, gridBagConstraints);
        tfServiceUrl.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(WadlUIPanel.class, "WsdlUIPanel.nsTF.AccessibleContext.accessibleName")); // NOI18N
        tfServiceUrl.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(WadlUIPanel.class, "HINT_targetNamespace")); // NOI18N

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 1.0;
        add(jPanel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
            
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbServiceUrl;
    private javax.swing.JTextField tfServiceUrl;
    // End of variables declaration//GEN-END:variables
    
    private class ServiceUrlDocListener implements javax.swing.event.DocumentListener {
        
        public void removeUpdate(javax.swing.event.DocumentEvent e) {
            documentChanged(e);
        }
        
        public void insertUpdate(javax.swing.event.DocumentEvent e) {
            documentChanged(e);
        }
        
        public void changedUpdate(javax.swing.event.DocumentEvent e) {
            documentChanged(e);
        }
        
        private void documentChanged(javax.swing.event.DocumentEvent e) {
            hasUserModifiedServiceUrl = true;
        }
    }
    
    private class DocListener implements javax.swing.event.DocumentListener {
        
        public void removeUpdate(javax.swing.event.DocumentEvent e) {
            documentChanged(e);
        }
        
        public void insertUpdate(javax.swing.event.DocumentEvent e) {
            documentChanged(e);
        }
        
        public void changedUpdate(javax.swing.event.DocumentEvent e) {
            documentChanged(e);
        }
        
        private void documentChanged(javax.swing.event.DocumentEvent e) {
            if(!hasUserModifiedServiceUrl) {
                tfServiceUrl.getDocument().removeDocumentListener(mListener);
                tfServiceUrl.setText(DEFAULT_SERVICE_URL);
                tfServiceUrl.getDocument().addDocumentListener(mListener);
            }
            
        }
    }
    
    String getServiceUrl() {
        return tfServiceUrl.getText();
    }
    
}
