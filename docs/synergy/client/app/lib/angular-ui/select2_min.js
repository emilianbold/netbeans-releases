angular.module("ui.select2",[]).value("uiSelect2Config",{}).directive("uiSelect2",["uiSelect2Config","$timeout",function(uiSelect2Config,$timeout){var options={};if(uiSelect2Config){angular.extend(options,uiSelect2Config)}return{require:"ngModel",compile:function(tElm,tAttrs){var watch,repeatOption,repeatAttr,isSelect=tElm.is("select"),isMultiple=(tAttrs.multiple!==undefined);if(tElm.is("select")){repeatOption=tElm.find("option[ng-repeat], option[data-ng-repeat]");if(repeatOption.length){repeatAttr=repeatOption.attr("ng-repeat")||repeatOption.attr("data-ng-repeat");watch=jQuery.trim(repeatAttr.split("|")[0]).split(" ").pop()}}return function(scope,elm,attrs,controller){var opts=angular.extend({},options,scope.$eval(attrs.uiSelect2));if(isSelect){delete opts.multiple;delete opts.initSelection}else{if(isMultiple){opts.multiple=true}}if(controller){controller.$render=function(){if(isSelect){elm.select2("val",controller.$viewValue)}else{if(isMultiple){if(!controller.$viewValue){elm.select2("data",[])}else{if(angular.isArray(controller.$viewValue)){elm.select2("data",controller.$viewValue)}else{elm.select2("val",controller.$viewValue)}}}else{if(angular.isObject(controller.$viewValue)){elm.select2("data",controller.$viewValue)}else{if(!controller.$viewValue){elm.select2("data",null)}else{elm.select2("val",controller.$viewValue)}}}}};if(watch){scope.$watch(watch,function(newVal,oldVal,scope){if(!newVal){return}$timeout(function(){elm.select2("val",controller.$viewValue);elm.trigger("change")})})}controller.$parsers.push(function(value){var div=elm.prev();div.toggleClass("ng-invalid",!controller.$valid).toggleClass("ng-valid",controller.$valid).toggleClass("ng-invalid-required",!controller.$valid).toggleClass("ng-valid-required",controller.$valid).toggleClass("ng-dirty",controller.$dirty).toggleClass("ng-pristine",controller.$pristine);return value});if(!isSelect){elm.bind("change",function(){if(scope.$$phase){return}scope.$apply(function(){controller.$setViewValue(elm.select2("data"))})});if(opts.initSelection){var initSelection=opts.initSelection;opts.initSelection=function(element,callback){initSelection(element,function(value){controller.$setViewValue(value);callback(value)})}}}}attrs.$observe("disabled",function(value){elm.select2("enable",!value)});attrs.$observe("readonly",function(value){elm.select2("readonly",!!value)});if(attrs.ngMultiple){scope.$watch(attrs.ngMultiple,function(newVal){elm.select2(opts)})}$timeout(function(){elm.select2(opts);elm.val(controller.$viewValue);controller.$render();if(!opts.initSelection&&!isSelect){controller.$setViewValue(elm.select2("data"))}})}}}}]);